interactions:
- request:
    body: '{"ksql": "DESCRIBE EXTENDED foo_table;"}'
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Length:
      - '40'
      Content-Type:
      - application/json
      Host:
      - localhost:8088
      User-Agent:
      - Python-urllib/3.6
    method: POST
    uri: http://localhost:8088/ksql
  response:
    body:
      string: '{"@type":"statement_error","error_code":40001,"message":"Could not
        find STREAM/TABLE ''FOO_TABLE'' in the Metastore","statementText":"DESCRIBE
        EXTENDED foo_table;","entities":[]}'
    headers:
      connection:
      - close
      content-length:
      - '176'
      content-type:
      - application/json
    status:
      code: 400
      message: Bad Request
- request:
    body: '{"ksql": "DROP\n    STREAM IF EXISTS\n    foo_table;"}'
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Length:
      - '54'
      Content-Type:
      - application/json
      Host:
      - localhost:8088
      User-Agent:
      - Python-urllib/3.6
    method: POST
    uri: http://localhost:8088/ksql
  response:
    body:
      string: '[{"@type":"currentStatus","statementText":"DROP\n    STREAM IF EXISTS\n    foo_table;","commandId":"stream/FOO_TABLE/drop","commandStatus":{"status":"SUCCESS","message":"Source
        `FOO_TABLE` does not exist."},"commandSequenceNumber":292,"warnings":[]}]'
    headers:
      connection:
      - close
      content-length:
      - '250'
      content-type:
      - application/json
    status:
      code: 200
      message: OK
- request:
    body: '{"ksql": "CREATE stream foo_table (name string, age bigint) WITH (kafka_topic=''exist_topic'',
      value_format=''DELIMITED'');"}'
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Length:
      - '121'
      Content-Type:
      - application/json
      Host:
      - localhost:8088
      User-Agent:
      - Python-urllib/3.6
    method: POST
    uri: http://localhost:8088/ksql
  response:
    body:
      string: '[{"@type":"currentStatus","statementText":"CREATE stream foo_table
        (name string, age bigint) WITH (kafka_topic=''exist_topic'', value_format=''DELIMITED'');","commandId":"stream/`FOO_TABLE`/create","commandStatus":{"status":"SUCCESS","message":"Stream
        created"},"commandSequenceNumber":294,"warnings":[]}]'
    headers:
      connection:
      - close
      content-length:
      - '301'
      content-type:
      - application/json
    status:
      code: 200
      message: OK
- request:
    body: '{"ksql": "CREATE stream foo_table (name string, age bigint) WITH (kafka_topic=''exist_topic'',
      value_format=''DELIMITED'');"}'
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Content-Length:
      - '121'
      Content-Type:
      - application/json
      Host:
      - localhost:8088
      User-Agent:
      - Python-urllib/3.6
    method: POST
    uri: http://localhost:8088/ksql
  response:
    body:
      string: '{"@type":"statement_error","error_code":40001,"message":"Cannot add
        stream ''FOO_TABLE'': A stream with the same name already exists","statementText":"CREATE
        stream foo_table (name string, age bigint) WITH (kafka_topic=''exist_topic'',
        value_format=''DELIMITED'');","entities":[]}'
    headers:
      connection:
      - close
      content-length:
      - '274'
      content-type:
      - application/json
    status:
      code: 400
      message: Bad Request
version: 1
